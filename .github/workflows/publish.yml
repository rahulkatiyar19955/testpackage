name: Publish
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish:
  # This job runs only if the PR is merged or pushed to main
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
  
    # - name: Import detrabot's GPG key for signing commits
    #   id: import-gpg
    #   uses: mattia-deepx/ghaction-import-gpg@v1.0.0
    #   with:
    #     gpg_private_key: ${{ secrets.DETRABOT_GPG_KEY }}
    #     passphrase: ${{ secrets.DETRABOT_PASSPHRASE }}
    #     git_config_global: true
    #     git_user_signingkey: true
    #     git_commit_gpgsign: true

    - name: "Use NodeJS 16"
      uses: actions/setup-node@v3
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com/
        cache: 'npm'

    - name: "Setup npm"
      run: |
        npm set @rahulkatiyar19955:registry=https://npm.pkg.github.com/rahulkatiyar19955
        npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"

    - name: Install dependencies
      run: npm install

    - name: Build packages using lerna
      run: npx lerna run build

    - name: Git Identity
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Version bump and package release using lerna
      # env:
      #   GH_TOKEN: ${{ secrets.DETRABOT_SECRET }}
      #   GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
      #   GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
      #   GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
      #   GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}

      run: |
        git stash
        git checkout ${{ github.ref }}
        
        npx lerna version --conventional-commits --yes
        npx lerna publish from-package --yes